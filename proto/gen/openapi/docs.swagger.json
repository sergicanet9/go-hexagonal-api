{
  "swagger": "2.0",
  "info": {
    "title": "Go Hexagonal API",
    "description": "User management API",
    "version": "v1"
  },
  "tags": [
    {
      "name": "HealthService"
    },
    {
      "name": "UserService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/health": {
      "get": {
        "summary": "Health check",
        "description": "Returns basic runtime information of the API when the service is up",
        "operationId": "HealthService_HealthCheck",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/healthHealthCheckResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "HealthService"
        ]
      }
    },
    "/v1/users": {
      "get": {
        "summary": "Get all users",
        "description": "Returns the list of all registered users",
        "operationId": "UserService_GetAll",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/userUserResponse"
                },
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                }
              },
              "title": "Stream result of userUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UserService"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    }
  },
  "definitions": {
    "healthHealthCheckResponse": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string"
        },
        "environment": {
          "type": "string"
        },
        "database": {
          "type": "string"
        },
        "httpPort": {
          "type": "integer",
          "format": "int32"
        },
        "grpcPort": {
          "type": "integer",
          "format": "int32"
        },
        "dsn": {
          "type": "string"
        }
      },
      "title": "HealthCheckResponse is the response from the health check"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "userUserResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "UserResponse is the response for a single user."
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "description": "JWT token authentication",
      "name": "Authorization",
      "in": "header"
    }
  },
  "externalDocs": {
    "description": "Powered by scv-go-tools",
    "url": "https://github.com/sergicanet9/scv-go-tools"
  }
}
